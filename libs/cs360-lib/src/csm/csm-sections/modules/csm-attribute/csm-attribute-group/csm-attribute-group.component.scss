@import "~@gs/design-tokens/scss/colors";
@import "~@gs/design-tokens/scss/border";
@import "~@gs/design-tokens/scss/spacings";
@import "~@gs/design-tokens/scss/font";

gridster {
    background: white;
    padding : 0px !important;
    overflow: auto;

    &.widget-item {
        &.mobile {
            gridster-item {
                position: relative !important;
            }
        }

        gridster-item {
            position: absolute !important;
            padding-top: 16px;
        }
    }
}
.maxWidth {
    max-width: 100%;
}
@media screen and (min-width: 1300px) {
    .maxWidth {
        max-width: 85%;
    }    
}
gridster-item {
  display: flex;
  flex-direction: column;
}

/* Apply margin left to all gridster items except the first one */
  //gridster gridster-item:not(:first-child) {
  //  margin-left: var(--Space-xlarge, 24px) !important;
  //}



.field_label {
    color : #3e5872;
    font-size: 12px;
    word-break: break-all;
    font-weight: 600;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}
.field_value {
    font-size: 14px;
    color: #19232f;
    
    padding : 5px 5px;
}
.field_value.hover:hover {
    background-color : #ebf3fe;
}
.field_value.cursor {
    cursor: pointer;
}

.saving-item {
    height : 30px; 
    background-color : #ebf3fe;
    width : 100%
}

gs-attribute-field-editor-wrapper {
    ::ng-deep {
        > section {
            width: calc(100% - 20px);

            &.section-wrapper {
                height: calc(100% - 40px);
                position: relative;
            }

            .gs-rte-edit {
                padding-right: 0;
            }
        }
    }
}


gridster-item {
    &.rte {
        ::ng-deep {
            .handle-se{
                right: 22px;
                bottom: 24px;
                background-image: url(../../../../../../assets/images/resize-icon.svg);
                background-size: cover;
                background-position: right;
                border: none;
                width: 13px;
                height: 15px;
                visibility: hidden;
            }

            .section-wrapper.non-editable {
                border: 1px solid transparent;
                border-radius: 4px;
                height: calc(100% - 40px);
                transition: all .2s;
                padding: 0 5px;
            }

            .gs-rte-edit {
                transition: all .2s;
                padding-bottom: 0 !important;
                &:hover {
                  margin-left: 0;
                }
            }
        }
        &.edit {
            ::ng-deep {
                .handle-se {
                    right: 22px !important;
                    bottom: 86px !important;
                    background-image: url(../../../../../../assets/images/resize-icon-blue.svg);
                    visibility: visible;
                }
            }
        }
        &.editable {
            ::ng-deep {
                .handle-se {
                    right: 21px;
                    bottom: 24px;
                }
            }
        }
    }

    &:hover {
        ::ng-deep {
            .handle-se{
                visibility: visible;
            }
            .section-wrapper.non-editable {
                border-color: $rich-gray-50;
            }
        }
    }

    &.edit {
        ::ng-deep {
            .rta-editor-wrapper {
                height: calc(100% - 20px) !important;
            }
        }
    }
}
.widget-label{
    line-height: 12px;
}
.widget-info{
   //background: url("../../../../../../assets/images/info.svg") no-repeat center;
   /*background-size: 14px 26px;
   height: 1rem;
   display: inline-flex;
   width: 1.6rem;*/
   .anticon-size{
        vertical-align: text-top;
        margin-left: $space-2xsmall;
    }
  }
.lockedHeader {
  font-size: 1.4rem;
}
.lockedText {
  margin-top: 1rem;
}

.gridster-wrapper {
    ::ng-deep {
        .preloader-container {
            background-color: #fff;
            z-index: 1;
        }
    }
}

// if we keep top padding the error message in the bottom of text box will be hidden
// so for main we can give top as 0 and bottom as 16 to show error message
.padding-bottom-16 {
    padding-top: 0 !important;
    padding-bottom: 16px !important;

    ::ng-deep {
        .gs-field-error {
            position: absolute;
            bottom: -11px;
            font-size: 8px; // cant fit message unless size is 8 or low
        }
    }
}
